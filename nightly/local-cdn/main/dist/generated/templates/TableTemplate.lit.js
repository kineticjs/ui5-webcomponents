/* eslint no-unused-vars: 0 */
import { html, styleMap, ifDefined, scopeTag } from "@ui5/webcomponents-base/dist/renderer/LitRenderer.js";
function block0(context, tags, suffix) { return html `<div id="before" role="none" tabindex="0" ui5-table-dummy-focus-area></div>${this.loading ? block1.call(this, context, tags, suffix) : undefined}<div id="table" role="grid" style="${styleMap(this.styles.table)}" aria-label="${ifDefined(this._ariaLabel)}" aria-multiselectable="${ifDefined(this._ariaMultiSelectable)}"><slot name="headerRow"></slot><slot></slot>${!this.rows.length ? block2.call(this, context, tags, suffix) : undefined}${this._shouldRenderGrowing ? block5.call(this, context, tags, suffix) : undefined}<div aria-hidden="true" id="table-end-row"><div id="table-end-cell"><div id="table-end" aria-hidden="true" tabindex="-1"></div></div></div></div><div id="after" role="none" tabindex="0" ui5-table-dummy-focus-area></div>`; }
function block1(context, tags, suffix) { return suffix ? html `<!-- TODO: Change to loading indicator --><${scopeTag("ui5-busy-indicator", tags, suffix)} id="busy-indicator" delay="50" class="ui5-table-busy-ind" active data-sap-focus-ref></${scopeTag("ui5-busy-indicator", tags, suffix)}>` : html `<!-- TODO: Change to loading indicator --><ui5-busy-indicator id="busy-indicator" delay="50" class="ui5-table-busy-ind" active data-sap-focus-ref></ui5-busy-indicator>`; }
function block2(context, tags, suffix) { return suffix ? html `<${scopeTag("ui5-table-row", tags, suffix)} id="nodata-row"><${scopeTag("ui5-table-cell", tags, suffix)} id="nodata-cell" excluded-from-navigation>${this.nodata.length ? block3.call(this, context, tags, suffix) : block4.call(this, context, tags, suffix)}</${scopeTag("ui5-table-cell", tags, suffix)}></${scopeTag("ui5-table-row", tags, suffix)}>` : html `<ui5-table-row id="nodata-row"><ui5-table-cell id="nodata-cell" excluded-from-navigation>${this.nodata.length ? block3.call(this, context, tags, suffix) : block4.call(this, context, tags, suffix)}</ui5-table-cell></ui5-table-row>`; }
function block3(context, tags, suffix) { return html `<slot name="nodata"></slot>`; }
function block4(context, tags, suffix) { return html `${ifDefined(this._effectiveNoDataText)}`; }
function block5(context, tags, suffix) { return suffix ? html `<div id="footer" role="rowgroup"><${scopeTag("ui5-table-row", tags, suffix)} id="growing-row"><${scopeTag("ui5-table-cell", tags, suffix)} id="growing-cell"><!-- The growing button is a div filling the cell --><!-- It has a growing text at the top and a growingSubText at the bottom --><slot name="${ifDefined(this._growing._individualSlot)}"></slot></${scopeTag("ui5-table-cell", tags, suffix)}></${scopeTag("ui5-table-row", tags, suffix)}></div>` : html `<div id="footer" role="rowgroup"><ui5-table-row id="growing-row"><ui5-table-cell id="growing-cell"><!-- The growing button is a div filling the cell --><!-- It has a growing text at the top and a growingSubText at the bottom --><slot name="${ifDefined(this._growing._individualSlot)}"></slot></ui5-table-cell></ui5-table-row></div>`; }
export default block0;
//# sourceMappingURL=TableTemplate.lit.js.map